@model IEnumerable<waterprj.Models.Consumption>
@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
}

@if (User.IsInRole("Admin"))
{
    <h1>Index</h1>

    <p>
        <a asp-action="Create">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.UserId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Date)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Volume)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Volume)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />
    <hr />
}

<h1>Water Consumption</h1>

<div style="display: flex; flex-direction: row;">
    <div>
        <h2>Average Consumption per User per Month</h2>
        <div style="display: flex;">
            <canvas id="userConsumptionChart" width="400" height="400"></canvas>
        </div>
    </div>
</div>

<div style="margin-top: 20px;">
    <h2>General Average Consumption per Month</h2>
    <canvas id="generalConsumptionChart" width="400" height="400"></canvas>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var ctxUser = document.getElementById('userConsumptionChart').getContext('2d');
        var userChartData = @Html.Raw(Json.Serialize(ViewData["UserChartData"]));

        var userChart = new Chart(ctxUser, {
            type: 'bar',
            data: {
                labels: Object.keys(userChartData),
                datasets: [{
                    label: 'Average Consumption',
                    data: Object.values(userChartData),
                    backgroundColor: 'rgba(255, 99, 132, 0.8)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                },
                responsive: false,
                maintainAspectRatio: true
            }
        });

        var ctxGeneral = document.getElementById('generalConsumptionChart').getContext('2d');
        var generalChartData = @Html.Raw(Json.Serialize(ViewData["GeneralChartData"]));

        var generalChart = new Chart(ctxGeneral, {
            type: 'doughnut',
            data: {
                labels: Object.keys(generalChartData),
                datasets: [{
                    label: 'General Average Consumption',
                    data: Object.values(generalChartData),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.8)',
                        'rgba(75, 192, 192, 0.8)',
                        'rgba(201, 203, 207, 0.8)',
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(201, 203, 207, 1)',
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: false,
                maintainAspectRatio: true
            }
        });
    </script>
}
